# # Ultralytics YOLO ðŸš€, AGPL-3.0 license
# # YOLOv8-pose keypoints/pose estimation model. For Usage examples see https://docs.ultralytics.com/tasks/pose

# Parameters
nc: 1  # number of classes
kpt_shape: [24, 3]  # number of keypoints, number of dims (2 for x,y or 3 for x,y,visible)
scales: # model compound scaling constants, i.e. 'model=yolov8n-pose.yaml' will call yolov8-pose.yaml with scale 'n'
  # [depth, width, max_channels]
  # n: [0.33, 0.09375, 1024]
  n: [0.33, 0.078125, 1024]

  # n: [0.33, 0.25, 1024]
  # s: [0.33, 0.50, 1024]
  # m: [0.67, 0.75, 768]
  # l: [1.00, 1.00, 512]
  # x: [1.00, 1.25, 512]
activation: nn.ReLU() # activation function

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv,    [8, 3, 2]] #  0-P1/2  256->128
  - [-1, 1, Conv,   [16, 3, 2]] #  1-P2/4  128-> 64
  - [-1, 3, C3,     [16, True]] #  2        64-> 64
  - [-1, 1, Conv,   [32, 3, 2]] #  3-P3/8   64-> 32
  - [-1, 6, C3,     [32, True]] #  4        32-> 32
  - [-1, 1, Conv,   [64, 3, 2]] #  5-P4/16  32-> 16
  - [-1, 6, C3,     [64, True]] #  6        16-> 16
  - [-1, 1, Conv,  [128, 3, 2]] #  7-P5/32  16->  8
  - [-1, 3, C3,    [128, True]] #  8         8->  8
  - [-1, 1, Conv,  [256, 3, 2]] #  9-P6/64   8->  4
  - [-1, 3, C3,    [256, True]] # 10         4->  4
  - [-1, 1, Conv,  [512, 3, 2]] # 11-P7/128  4->  2
  - [-1, 3, C3,    [512, True]] # 12         2->  2
  - [-1, 1, Conv, [1024, 3, 2]] # 13-P8/256  2->  1
  - [-1, 3, C3,   [1024, True]] # 14         1->  1

  # - [-1, 1, Conv, [64, 3, 2]]   #  0-P1/2  256->128
  # - [-1, 1, Conv, [128, 3, 2]]  #  1-P2/4  128-> 64
  # - [-1, 3, C3, [128, True]]   #  2        64-> 64
  # - [-1, 1, Conv, [256, 3, 2]]  #  3-P3/8   64-> 32
  # - [-1, 6, C3, [256, True]]   #  4        32-> 32
  # - [-1, 1, Conv, [512, 3, 2]]  #  5-P4/16  32-> 16
  # - [-1, 6, C3, [512, True]]   #  6        16-> 16
  # - [-1, 1, Conv, [1024, 3, 2]] #  7-P5/32  16->  8
  # - [-1, 3, C3, [1024, True]]  #  8         8->  8
  # //- [-1, 1, SPPF, [1024, 5]]  #  9

# YOLOv8.0n head
head:
  # //- [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  # //- [[-1, 6], 1, Concat, [1]]  # cat backbone P4
  # //- [-1, 3, C2f, [512]]  # 12

  # //- [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  # //- [[-1, 4], 1, Concat, [1]]  # cat backbone P3
  # //- [-1, 3, C2f, [256]]  # 15 (P3/8-small)

  # //- [-1, 1, Conv, [256, 3, 2]]
  # //- [[-1, 12], 1, Concat, [1]]  # cat head P4
  # //- [-1, 3, C2f, [512]]  # 18 (P4/16-medium)

  # //- [-1, 1, Conv, [512, 3, 2]]
  # //- [[-1, 9], 1, Concat, [1]]  # cat head P5
  # //- [-1, 3, C2f, [1024]]  # 21 (P5/32-large)

  # //- [[15, 18, 21], 1, Pose, [nc, kpt_shape]]  # Pose(P3, P4, P5)

  - [[-1], 1, AltekPose, [nc, kpt_shape]]  # Pose(14)
  

